{"version":3,"sources":["controllers-rusline.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","PopupRemarkController","vm","this","close","jQuery","fancybox","console","log","angular","component","templateUrl","controller","controllerAs","2","cityPickerFixController","$scope","utils","backend","ready","then","substrChange","dontMoveFocus","filteredCitiesList","filterCitiesList","citiesList","searchSubstr","sessionParams","lang","localNamePropName","excludeCityCode","selectedCity","focusNextInput","app","directive","scope","bindToController","3","flightsSortingController","sortFlights","handleSelect","selectedSortingFilter","value","sortFlightsByDepTime","sortFligtsByArrTime","sortFlightsByFlightTime","sortFlightsByPrice","sortByConnectionTime","segment","sort","segmentA","segmentB","compareStringTime","flightsInfo","departuretime","arrivaltime","flighttime","parseInt","minPrice","connections","time","onlyDirectToggleHandler","newVal","onlyDirect","setIsDirectPropToFlights","_","forEach","flight","isDirectFlight","handleDirectCheckboxSwitch","sortingVariants","name","getAlias","$watch","bind","4","filter","airplaneName","contains","5","./components/popup-luggage-weight-info/popup-luggage-weight-info","./directives/cityPickerFix","./directives/flightsSorting/flights-sorting","./filters/airplaneRename"],"mappings":"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","file":"controllers-rusline.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\nangular.module('app').component('popupLuggageWeightInfo', {\n    templateUrl: 'components/popup-luggage-weight-info/popup-luggage-weight-info.html',\n    controller: ['fancyboxTools', PopupRemarkController],\n    controllerAs: 'vm'\n});\n\nfunction PopupRemarkController() {\n\n    const vm = this;\n    vm.close = jQuery.fancybox.close;\n\n    console.log(vm);\n}\n\n},{}],2:[function(require,module,exports){\n\"use strict\";\n/*\n* Восстанавливаем старое поводение функции sustrChange Валентин удалил возможность передавать аргумент\n* dontMoveFocus в эту функцию. Данная директива подменяет новую версию на старую.\n* Эта директива должна быть подключена до момента пока сирена не закончит разработку\n* компонента awesome-search-form\n */\nvar app = angular.module('app');\n\napp.directive('cityPickerFix', function () {\n    return {\n        scope: false,\n        bindToController: true,\n        controller: 'cityPickerFixController'\n    }\n});\n\napp.controller('cityPickerFixController', ['$scope', 'utils', 'backend', cityPickerFixController]);\n\n\nfunction cityPickerFixController($scope, utils, backend) {\n    backend.ready.then(function () {\n        $scope.substrChange = function (dontMoveFocus) {\n            $scope.filteredCitiesList = utils.filterCitiesList(\n                $scope.citiesList,\n                $scope.searchSubstr,\n                backend.sessionParams.lang,\n                backend.sessionParams.localNamePropName,\n                $scope.excludeCityCode\n            );\n            if ($scope.filteredCitiesList.length === 1 && !dontMoveFocus) {\n                $scope.selectedCity = $scope.filteredCitiesList[0];\n                focusNextInput();\n            }\n        };\n    })\n}\n\n},{}],3:[function(require,module,exports){\n\"use strict\";\nvar app = angular.module('app');\n\napp.directive('flightsSorting', function () {\n    return {\n        scope: {\n            'segment': '='\n        },\n        templateUrl: 'directives/flightsSorting/flights-sorting.html',\n        controllerAs: 'vm',\n        bindToController: true,\n        controller: 'flightsSortingController'\n    }\n});\n\napp.controller('flightsSortingController', ['$scope', 'utils', 'backend', flightsSortingController]);\n\nfunction flightsSortingController($scope, utils, backend) {\n    var vm = this;\n\n    vm.handleSelect = handleSelect;\n    vm.onlyDirect = false;\n    vm.handleDirectCheckboxSwitch = onlyDirectToggleHandler;\n    vm.sortingVariants = [];\n    vm.selectedSortingFilter = vm.sortingVariants[0];\n\n    backend.ready.then(function () {\n        vm.sortingVariants = [\n            {\n                value: 'depTime',\n                name: backend.getAlias('web.sortingNames.departureTime')\n            },\n            {\n                value: 'arrTime',\n                name: backend.getAlias('web.sortingNames.arrivalTime')\n            },\n            {\n                value: 'flightTime',\n                name: backend.getAlias('web.sortingNames.flightTime')\n            },\n            {\n                value: 'cheapest',\n                name: backend.getAlias('web.sortingNames.cheapest')\n            },\n            {\n                value: 'connectionTime',\n                name: backend.getAlias('web.sortingNames.connectionTime')\n            }\n        ];\n\n        vm.selectedSortingFilter = vm.sortingVariants[0];\n        // sort by default when aliases load\n        sortFlights();\n    });\n\n    $scope.$watch(angular.bind(this, function () {\n        return vm.onlyDirect\n    }), function () {\n        setIsDirectPropToFlights();\n    });\n\n    // helper function with more\n    // convenient name for use inside controller\n    function sortFlights() {\n        handleSelect();\n    }\n\n    function handleSelect() {\n\n        switch (vm.selectedSortingFilter.value) {\n            case 'depTime':\n                sortFlightsByDepTime();\n                break;\n            case 'arrTime':\n                sortFligtsByArrTime();\n                break;\n            case 'flightTime':\n                sortFlightsByFlightTime();\n                break;\n            case 'cheapest':\n                sortFlightsByPrice();\n                break;\n\n            case 'connectionTime':\n                sortByConnectionTime();\n                break;\n\n            default:\n                sortFlightsByDepTime();\n                break;\n        }\n    }\n\n    function sortFlightsByDepTime() {\n        vm.segment.sort(function (segmentA, segmentB) {\n            return utils.compareStringTime(segmentA.flightsInfo.departuretime, segmentB.flightsInfo.departuretime);\n        });\n    }\n\n    function sortFligtsByArrTime() {\n        vm.segment.sort(function (segmentA, segmentB) {\n            return utils.compareStringTime(segmentA.flightsInfo.arrivaltime, segmentB.flightsInfo.arrivaltime);\n        });\n    }\n\n    function sortFlightsByFlightTime() {\n        vm.segment.sort(function (segmentA, segmentB) {\n            return utils.compareStringTime(segmentA.flightsInfo.flighttime, segmentB.flightsInfo.flighttime);\n        });\n    }\n\n    function sortFlightsByPrice() {\n        vm.segment.sort(function (segmentA, segmentB) {\n            return parseInt(segmentA.minPrice, 10) - parseInt(segmentB.minPrice, 10);\n        });\n    }\n\n    function sortByConnectionTime() {\n        vm.segment.sort(function (segmentA, segmentB) {\n            if (!segmentA.flightsInfo.connections.length) {\n                // segment A don't have connections\n                return -1;\n            } else if (!segmentB.flightsInfo.connections.length) {\n                // segment B dont have connections\n                return 1;\n            } else if (segmentA.flightsInfo.connections.length && segmentB.flightsInfo.connections.length) {\n                // compare\n                return utils.compareStringTime(segmentA.flightsInfo.connections[0].time, segmentB.flightsInfo.connections[0].time);\n            } else {\n                // equal\n                return 0;\n            }\n        });\n    }\n\n    function onlyDirectToggleHandler(newVal) {\n        vm.onlyDirect = newVal;\n        setIsDirectPropToFlights();\n    }\n\n    function setIsDirectPropToFlights() {\n        // if onlyDirect is set to true, loop over flights and set correct isDirectFlight\n        // property to every flight in segment\n        // else, set isDirectFlight = true for every flight\n        // we need it, because in template, we use:\n        // ng-if=\"row.isDirectFlight\" where row is flight\n        if (vm.onlyDirect) {\n            _.forEach(vm.segment, function (flight) {\n                flight.isDirectFlight = !flight.flightsInfo.connections.length;\n            });\n        } else {\n            _.forEach(vm.segment, function (flight) {\n                flight.isDirectFlight = true;\n            });\n        }\n    }\n}\n\n\n},{}],4:[function(require,module,exports){\n\"use strict\";\nvar app = angular.module('app');\n\napp.filter('airplaneRename', function () {\n    return function (airplaneName) {\n        if (_.contains(['CANADAIR REGIONAL JET', 'КАНАДЭР РЕГИОН ДЖЕТ'], airplaneName)) {\n            return 'CRJ-100/200';\n        }\n        return airplaneName;\n    }\n});\n\n\n},{}],5:[function(require,module,exports){\n\"use strict\";\nrequire('./filters/airplaneRename');\nrequire('./components/popup-luggage-weight-info/popup-luggage-weight-info');\nrequire('./directives/flightsSorting/flights-sorting');\nrequire('./directives/cityPickerFix');\n\n},{\"./components/popup-luggage-weight-info/popup-luggage-weight-info\":1,\"./directives/cityPickerFix\":2,\"./directives/flightsSorting/flights-sorting\":3,\"./filters/airplaneRename\":4}]},{},[5]);\n"]}