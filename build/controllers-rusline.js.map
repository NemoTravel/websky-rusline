{"version":3,"sources":["controllers-rusline.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","PopupRemarkController","vm","this","close","jQuery","fancybox","console","log","angular","component","templateUrl","controller","controllerAs","2","flightsSortingController","$scope","utils","backend","sortFlights","handleSelect","selectedSortingFilter","value","sortFlightsByDepTime","sortFligtsByArrTime","sortFlightsByFlightTime","sortFlightsByPrice","sortByConnectionTime","segment","sort","segmentA","segmentB","compareStringTime","flightsInfo","departuretime","arrivaltime","flighttime","parseInt","minPrice","connections","time","onlyDirectToggleHandler","newVal","onlyDirect","setIsDirectPropToFlights","_","forEach","flight","isDirectFlight","handleDirectCheckboxSwitch","sortingVariants","ready","then","name","getAlias","$watch","bind","app","directive","scope","bindToController","3","filter","airplaneName","contains","4","./components/popup-luggage-weight-info/popup-luggage-weight-info","./directives/flightsSorting/flights-sorting","./filters/airplaneRename"],"mappings":"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","file":"controllers-rusline.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\nangular.module('app').component('popupLuggageWeightInfo', {\n    templateUrl: 'components/popup-luggage-weight-info/popup-luggage-weight-info.html',\n    controller: ['fancyboxTools', PopupRemarkController],\n    controllerAs: 'vm'\n});\n\nfunction PopupRemarkController() {\n\n    const vm = this;\n    vm.close = jQuery.fancybox.close;\n\n    console.log(vm);\n}\n\n},{}],2:[function(require,module,exports){\n\"use strict\";\nvar app = angular.module('app');\n\napp.directive('flightsSorting', function () {\n    return {\n        scope: {\n            'segment': '='\n        },\n        templateUrl: 'directives/flightsSorting/flights-sorting.html',\n        controllerAs: 'vm',\n        bindToController: true,\n        controller: 'flightsSortingController'\n    }\n});\n\napp.controller('flightsSortingController', ['$scope', 'utils', 'backend', flightsSortingController]);\n\nfunction flightsSortingController($scope, utils, backend) {\n    var vm = this;\n\n    vm.handleSelect = handleSelect;\n    vm.onlyDirect = false;\n    vm.handleDirectCheckboxSwitch = onlyDirectToggleHandler;\n    vm.sortingVariants = [];\n    vm.selectedSortingFilter = vm.sortingVariants[0];\n\n    backend.ready.then(function () {\n        vm.sortingVariants = [\n            {\n                value: 'depTime',\n                name: backend.getAlias('web.sortingNames.departureTime')\n            },\n            {\n                value: 'arrTime',\n                name: backend.getAlias('web.sortingNames.arrivalTime')\n            },\n            {\n                value: 'flightTime',\n                name: backend.getAlias('web.sortingNames.flightTime')\n            },\n            {\n                value: 'cheapest',\n                name: backend.getAlias('web.sortingNames.cheapest')\n            },\n            {\n                value: 'connectionTime',\n                name: backend.getAlias('web.sortingNames.connectionTime')\n            }\n        ];\n\n        vm.selectedSortingFilter = vm.sortingVariants[0];\n        // sort by default when aliases load\n        sortFlights();\n    });\n\n    $scope.$watch(angular.bind(this, function () {\n        return vm.onlyDirect\n    }), function () {\n        setIsDirectPropToFlights();\n    });\n\n    // helper function with more\n    // convenient name for use inside controller\n    function sortFlights() {\n        handleSelect();\n    }\n\n    function handleSelect() {\n\n        switch (vm.selectedSortingFilter.value) {\n            case 'depTime':\n                sortFlightsByDepTime();\n                break;\n            case 'arrTime':\n                sortFligtsByArrTime();\n                break;\n            case 'flightTime':\n                sortFlightsByFlightTime();\n                break;\n            case 'cheapest':\n                sortFlightsByPrice();\n                break;\n\n            case 'connectionTime':\n                sortByConnectionTime();\n                break;\n\n            default:\n                sortFlightsByDepTime();\n                break;\n        }\n    }\n\n    function sortFlightsByDepTime() {\n        vm.segment.sort(function (segmentA, segmentB) {\n            return utils.compareStringTime(segmentA.flightsInfo.departuretime, segmentB.flightsInfo.departuretime);\n        });\n    }\n\n    function sortFligtsByArrTime() {\n        vm.segment.sort(function (segmentA, segmentB) {\n            return utils.compareStringTime(segmentA.flightsInfo.arrivaltime, segmentB.flightsInfo.arrivaltime);\n        });\n    }\n\n    function sortFlightsByFlightTime() {\n        vm.segment.sort(function (segmentA, segmentB) {\n            return utils.compareStringTime(segmentA.flightsInfo.flighttime, segmentB.flightsInfo.flighttime);\n        });\n    }\n\n    function sortFlightsByPrice() {\n        vm.segment.sort(function (segmentA, segmentB) {\n            return parseInt(segmentA.minPrice, 10) - parseInt(segmentB.minPrice, 10);\n        });\n    }\n\n    function sortByConnectionTime() {\n        vm.segment.sort(function (segmentA, segmentB) {\n            if (!segmentA.flightsInfo.connections.length) {\n                // segment A don't have connections\n                return -1;\n            } else if (!segmentB.flightsInfo.connections.length) {\n                // segment B dont have connections\n                return 1;\n            } else if (segmentA.flightsInfo.connections.length && segmentB.flightsInfo.connections.length) {\n                // compare\n                return utils.compareStringTime(segmentA.flightsInfo.connections[0].time, segmentB.flightsInfo.connections[0].time);\n            } else {\n                // equal\n                return 0;\n            }\n        });\n    }\n\n    function onlyDirectToggleHandler(newVal) {\n        vm.onlyDirect = newVal;\n        setIsDirectPropToFlights();\n    }\n\n    function setIsDirectPropToFlights() {\n        // if onlyDirect is set to true, loop over flights and set correct isDirectFlight\n        // property to every flight in segment\n        // else, set isDirectFlight = true for every flight\n        // we need it, because in template, we use:\n        // ng-if=\"row.isDirectFlight\" where row is flight\n        if (vm.onlyDirect) {\n            _.forEach(vm.segment, function (flight) {\n                flight.isDirectFlight = !flight.flightsInfo.connections.length;\n            });\n        } else {\n            _.forEach(vm.segment, function (flight) {\n                flight.isDirectFlight = true;\n            });\n        }\n    }\n}\n\n\n},{}],3:[function(require,module,exports){\n\"use strict\";\nvar app = angular.module('app');\n\napp.filter('airplaneRename', function () {\n    return function (airplaneName) {\n        if (_.contains(['CANADAIR REGIONAL JET', 'КАНАДЭР РЕГИОН ДЖЕТ'], airplaneName)) {\n            return 'CRJ-100/200';\n        }\n        return airplaneName;\n    }\n});\n\n\n},{}],4:[function(require,module,exports){\n\"use strict\";\nrequire('./filters/airplaneRename');\nrequire('./components/popup-luggage-weight-info/popup-luggage-weight-info');\nrequire('./directives/flightsSorting/flights-sorting');\n\n},{\"./components/popup-luggage-weight-info/popup-luggage-weight-info\":1,\"./directives/flightsSorting/flights-sorting\":2,\"./filters/airplaneRename\":3}]},{},[4]);\n"]}